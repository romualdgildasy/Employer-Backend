"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isInRange = exports.isEqualTo = exports.isLowerOrEqualTo = exports.isLowerThan = exports.isGreaterOrEqualTo = exports.isGreaterThan = exports.isInteger = exports.isNumber = void 0;
var isNumber = function (v) {
    return ((v !== Infinity &&
        v !== -Infinity &&
        typeof v === "number" &&
        !Number.isNaN(v)) ||
        (typeof v === "string" && v.trim() !== "" && !Number.isNaN(+v)));
};
exports.isNumber = isNumber;
var isInteger = function (v) {
    return Number.isInteger(+v);
};
exports.isInteger = isInteger;
var isGreaterThan = function (v, valueToCompareWith) {
    return +v > +valueToCompareWith;
};
exports.isGreaterThan = isGreaterThan;
var isGreaterOrEqualTo = function (v, valueToCompareWith) {
    return +v >= +valueToCompareWith;
};
exports.isGreaterOrEqualTo = isGreaterOrEqualTo;
var isLowerThan = function (v, valueToCompareWith) {
    return +v < +valueToCompareWith;
};
exports.isLowerThan = isLowerThan;
var isLowerOrEqualTo = function (v, valueToCompareWith) {
    return +v <= +valueToCompareWith;
};
exports.isLowerOrEqualTo = isLowerOrEqualTo;
var isEqualTo = function (v, valueToCompareWith) {
    return +v == +valueToCompareWith;
};
exports.isEqualTo = isEqualTo;
var isInRange = function (v, min, max) {
    return +v >= +min && +v <= +max;
};
exports.isInRange = isInRange;
